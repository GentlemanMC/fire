package dev.zprestige.fire.module.exploit.trapdoorburrow

import dev.zprestige.fire.Main
import dev.zprestige.fire.event.bus.EventListener
import dev.zprestige.fire.event.impl.TickEvent
import dev.zprestige.fire.util.impl.BlockUtil
import net.minecraft.init.Blocks
import net.minecraft.util.math.AxisAlignedBB
import net.minecraft.util.math.Vec3d

class TickListener(trapDoorBurrow: TrapDoorBurrow) : EventListener<TickEvent, TrapDoorBurrow>(
    TickEvent::class.java, trapDoorBurrow
) {
    override fun invoke(e: Any) {
        if (module.instant.GetSwitch()) {
            Main.tickManager.setTimer(module.instantFactor.GetSlider())
        }
        mc.player.setPosition((module.pos!!.getX() + 0.5f).toDouble(),
            mc.player.posY,
            (module.pos!!.getZ() + 0.5f).toDouble()
        )
        if (BlockUtil.getState(module.pos) != Blocks.TRAPDOOR) {
            if (mc.player.onGround) {
                mc.player.jump()
                return
            }
            if (!mc.player.entityBoundingBox.intersects(AxisAlignedBB(module.pos!!))) {
                val slot = Main.inventoryManager.getBlockFromHotbar(Blocks.TRAPDOOR)
                val currentItem = mc.player.inventory.currentItem
                if (slot == -1) {
                    return
                }
                Main.inventoryManager.switchToSlot(slot)
                Main.interactionManager.placeBlock(module.pos, false, false, false, true, false)
                Main.inventoryManager.switchBack(currentItem)
            }
        } else {
            val vec = Vec3d(module.pos!!).addVector(0.5, 1.0, 0.5)
            if (!module.opened) {
                module.interactTrapdoor(vec)
                module.opened = true
            } else {
                if (mc.player.onGround) {
                    module.interactTrapdoor(vec)
                    module.disableModule()
                } else {
                    mc.player.motionY = -module.fallSpeed.GetSlider().toDouble()
                }
            }
        }
    }
}