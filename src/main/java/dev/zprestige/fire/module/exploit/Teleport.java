package dev.zprestige.fire.module.exploit;

import dev.zprestige.fire.events.eventbus.annotation.RegisterListener;
import dev.zprestige.fire.events.impl.TickEvent;
import dev.zprestige.fire.module.Descriptor;
import dev.zprestige.fire.module.Module;
import dev.zprestige.fire.settings.impl.Slider;
import dev.zprestige.fire.settings.impl.Switch;
import net.minecraft.network.play.client.CPacketPlayer;

@Descriptor(description = "Really dumb exploit for 5b5t")
public class Teleport extends Module {
    public final Slider force = Menu.Slider("Force", 1.0f, 0.1f, 10.0f);
    public final Slider attempts = Menu.Slider("Attempts", 20.0f, 1, 20.0f);
    public final Slider distance = Menu.Slider("Distance", 15.0f, 1.0f, 50.0f);
    public final Switch hold = Menu.Switch("Hold", false);
    public final Switch vertical = Menu.Switch("Air Glide", false);
    public final Slider verticalFactor = Menu.Slider("Vertical Glide Speed", 5.0f, 0.1f, 100.0f).visibility(z -> vertical.GetSwitch());
    protected boolean executed;

    @RegisterListener
    public void onTick(final TickEvent event) {
        if (vertical.GetSwitch()) {
            mc.player.motionY = -0.01f;
            if (mc.gameSettings.keyBindJump.isKeyDown() || mc.gameSettings.keyBindSneak.isKeyDown()) {
                for (int i = 0; i < attempts.GetSlider(); ++i) {
                    mc.player.setPosition(mc.player.posX, mc.player.posY + ((mc.gameSettings.keyBindSneak.isKeyDown() ? -verticalFactor.GetSlider() : verticalFactor.GetSlider()) / 100f), mc.player.posZ);
                }
            }
        }
        if (mc.gameSettings.keyBindAttack.isKeyDown() && (!executed || hold.GetSwitch())) {
            for (int i = 0; i < attempts.GetSlider(); ++i) {
                sendPacket(0, -(force.GetSlider() / 10.0f), 0, false);
                switch (mc.player.getHorizontalFacing()) {
                    case NORTH:
                        sendPacket(0, 0, -distance.GetSlider(), true);
                        break;
                    case EAST:
                        sendPacket(distance.GetSlider(), 0, 0, true);
                        break;
                    case SOUTH:
                        sendPacket(0, 0, distance.GetSlider(), true);
                        break;
                    case WEST:
                        sendPacket(-distance.GetSlider(), 0, 0, true);
                        break;
                }
                executed = true;
            }
        } else {
            executed = false;
        }
    }

    protected void sendPacket(double x, double y, double z, boolean onGroundIn) {
        mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX + x, mc.player.posY + y, mc.player.posZ + z, onGroundIn));
    }
}