package dev.zprestige.fire.module.exploit;

import dev.zprestige.fire.Main;
import dev.zprestige.fire.events.eventbus.annotation.RegisterListener;
import dev.zprestige.fire.events.impl.TickEvent;
import dev.zprestige.fire.module.Module;
import dev.zprestige.fire.settings.impl.Slider;
import dev.zprestige.fire.settings.impl.Switch;
import dev.zprestige.fire.util.impl.BlockUtil;
import net.minecraft.init.Blocks;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.AxisAlignedBB;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Vec3d;

public class TrapDoorBurrow extends Module {
    public final Slider fallSpeed = Menu.Slider("Fall Speed", 1.0f, 1.0f, 20.0f);
    public final Switch instant = Menu.Switch("Instant", false);
    public final Slider instantFactor = Menu.Slider("Instant Factor", 20.0f, 1.1f, 500.0f).visibility(z -> instant.GetSwitch());
    protected boolean opened;
    protected BlockPos pos;
    protected float savedPitch;


    @Override
    public void onEnable() {
        pos = BlockUtil.getPosition();
        opened = false;
        savedPitch = mc.player.rotationPitch;
        mc.player.rotationPitch = 90;
    }

    @Override
    public void onDisable() {
        Main.tickManager.syncTimer();
        mc.player.rotationPitch = savedPitch;
    }


    @RegisterListener
    public void onTick(final TickEvent event) {
        if (instant.GetSwitch()) {
            Main.tickManager.setTimer(instantFactor.GetSlider());
        }
        mc.player.setPosition(pos.getX() + 0.5f, mc.player.posY, pos.getZ() + 0.5f);
        if (!BlockUtil.getState(pos).equals(Blocks.TRAPDOOR)) {
            if (mc.player.onGround) {
                mc.player.jump();
                return;
            }
            if (!mc.player.getEntityBoundingBox().intersects((new AxisAlignedBB(pos)))) {
                final int slot = Main.inventoryManager.getBlockFromHotbar(Blocks.TRAPDOOR);
                final int currentItem = mc.player.inventory.currentItem;
                if (slot == -1) {
                    return;
                }
                Main.inventoryManager.switchToSlot(slot);
                Main.interactionManager.placeBlock(pos, false, false, false, true);
                Main.inventoryManager.switchBack(currentItem);
            }
        } else {
            final Vec3d vec = new Vec3d(pos).addVector(0.5, 1.0, 0.5);
            if (!opened) {
                interactTrapdoor(vec);
                opened = true;
            } else {
                if (mc.player.onGround) {
                    interactTrapdoor(vec);
                    disableModule();
                } else {
                    mc.player.motionY = -fallSpeed.GetSlider();
                }
            }
        }
    }

    protected void interactTrapdoor(final Vec3d vec) {
        mc.playerController.processRightClickBlock(mc.player, mc.world, pos, EnumFacing.UP, vec, EnumHand.MAIN_HAND);
    }
}
