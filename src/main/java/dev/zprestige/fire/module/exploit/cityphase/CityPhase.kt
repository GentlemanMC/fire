package dev.zprestige.fire.module.exploit.cityphase

import dev.zprestige.fire.event.bus.EventListener
import dev.zprestige.fire.module.Descriptor
import dev.zprestige.fire.module.Module
import dev.zprestige.fire.settings.impl.Slider

/**
 * Geen probleem wallhacks :^)
 */
@Descriptor(description = "Phases slightly into the wall to prevent crystal damage")
class CityPhase : Module() {
    val timeout: Slider = Menu.Slider("Timeout", 5, 1, 10)

    init {
        eventListeners = arrayOf<EventListener<*, *>>(
            TickListener(this)
        )
    }

    fun movingByKeys(): Boolean {
        return mc.gameSettings.keyBindForward.isKeyDown || mc.gameSettings.keyBindBack.isKeyDown || mc.gameSettings.keyBindLeft.isKeyDown || mc.gameSettings.keyBindRight.isKeyDown
    }

    fun roundToClosest(num: Double, low: Double, high: Double): Double {
        val d1 = num - low
        val d2 = high - num
        return if (d2 > d1) {
            low
        } else {
            high
        }
    }
}