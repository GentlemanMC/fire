package dev.zprestige.fire.module.exploit.chorusmanipulator

import dev.zprestige.fire.Main
import dev.zprestige.fire.event.bus.EventListener
import dev.zprestige.fire.event.impl.PacketEvent.PacketReceiveEvent
import net.minecraft.network.play.server.SPacketPlayerPosLook
import net.minecraft.util.math.BlockPos
import net.minecraft.util.math.Vec3d

class PacketReceiveListener(chorusManipulator: ChorusManipulator) : EventListener<PacketReceiveEvent, ChorusManipulator>(
    PacketReceiveEvent::class.java, chorusManipulator
) {
    override fun invoke(e: Any) {
        val event = e as PacketReceiveEvent
        if (module.chorussed) {
            if (event.packet is SPacketPlayerPosLook) {
                val packet = event.packet as SPacketPlayerPosLook
                module.pos = BlockPos(packet.getX(), packet.getY(), packet.getZ())
                if (module.rotateOnChorus.GetSwitch()) {
                    val rotations =
                        Main.rotationManager.calculateAngle(Vec3d(packet.getX(), packet.getY() + 1, packet.getZ()))
                    Main.rotationManager.setClientRotations(rotations[0], rotations[1])
                }
                packet.yaw = mc.player.rotationYaw
                packet.pitch = mc.player.rotationPitch
                event.setCancelled()
            }
        }
    }
}