package dev.zprestige.fire.module.exploit.chorusmanipulator;


import dev.zprestige.fire.Main;
import dev.zprestige.fire.event.bus.EventListener;
import dev.zprestige.fire.module.Descriptor;
import dev.zprestige.fire.module.Module;
import dev.zprestige.fire.settings.impl.ColorBox;
import dev.zprestige.fire.settings.impl.Key;
import dev.zprestige.fire.settings.impl.Slider;
import dev.zprestige.fire.settings.impl.Switch;
import dev.zprestige.fire.util.impl.Timer;
import net.minecraft.network.play.client.CPacketConfirmTeleport;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.util.math.BlockPos;
import org.lwjgl.input.Keyboard;

import java.awt.*;
import java.util.LinkedList;
import java.util.Objects;
import java.util.Queue;

@Descriptor(description = "Controls when you want to teleport to your chorus fruit position")
public class ChorusManipulator extends Module {
    public final Switch rotateOnChorus = Menu.Switch("Rotate On Chorus", false);
    public final Key activateKey = Menu.Key("Activate Key", Keyboard.KEY_NONE);
    public final ColorBox boxColor = Menu.Color("Box Color", Color.WHITE);
    public final ColorBox outlineColor = Menu.Color("Outline Color", Color.WHITE);
    public final Slider lineWidth = Menu.Slider("Line Width", 1.0f, 0.1f, 5.0f);
    protected final Timer timer = new Timer();
    protected final Queue<CPacketPlayer> packets = new LinkedList<>();
    protected final Queue<CPacketConfirmTeleport> tpPackets = new LinkedList<>();
    protected boolean chorussed = false;
    protected BlockPos pos = null;

    public ChorusManipulator() {
        eventListeners = new EventListener[]{
                new ConnectionDisconnectListener(this),
                new Frame3DListener(this),
                new PacketReceiveListener(this),
                new PacketSendListener(this),
                new TickListener(this)
        };
    }

    protected void activate(){
        Main.eventBus.unregisterListeners(eventListeners);
        onDisable();
        Main.eventBus.registerListeners(eventListeners);
        onEnable();
    }

    @Override
    public void onDisable() {
        while (!packets.isEmpty()) {
            if (mc.player.connection != null) {
                mc.player.connection.sendPacket(packets.poll());
            }
        }
        while (!tpPackets.isEmpty()) {
            if (mc.player.connection != null) {
                mc.player.connection.sendPacket(tpPackets.poll());
            }
        }
        pos = null;
        chorussed = false;
    }
}
