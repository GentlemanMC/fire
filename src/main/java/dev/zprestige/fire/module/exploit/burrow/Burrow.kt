package dev.zprestige.fire.module.exploit.burrow

import dev.zprestige.fire.Main
import dev.zprestige.fire.event.bus.EventListener
import dev.zprestige.fire.module.Descriptor
import dev.zprestige.fire.module.Module
import dev.zprestige.fire.settings.impl.ComboBox
import dev.zprestige.fire.settings.impl.Slider
import dev.zprestige.fire.settings.impl.Switch
import dev.zprestige.fire.util.impl.BlockUtil
import net.minecraft.init.Blocks
import net.minecraft.network.play.client.CPacketPlayer
import net.minecraft.util.math.BlockPos

@Descriptor(description = "Rubberbands you inside a block (Skitttyyhack)")
class Burrow : Module() {
    val force: Slider = Menu.Slider("Force", 2.0f, -5.0f, 5.0f)
    val rotate: Switch = Menu.Switch("Rotate", false)
    val strict: Switch = Menu.Switch("Strict", false)
    private val block: ComboBox = Menu.ComboBox("Block", "Fallback", arrayOf(
        "Obsidian", "EnderChests", "Fallback", "ReverseFallback", "WitherSkulls", "Anvil", "Webs"
    )
    )
    val offsets = doubleArrayOf(
        0.41999998688698,
        0.7531999805211997,
        1.00133597911214,
        1.16610926093821
    )
    var startPos: BlockPos? = null

    init {
        eventListeners = arrayOf<EventListener<*, *>>(
            TickListener(this)
        )
    }

    override fun onEnable() {
        startPos = BlockUtil.getPosition()
    }

    fun sendPacketsOnGround(y: Double) {
        mc.player.connection.sendPacket(CPacketPlayer.Position(mc.player.posX,
            mc.player.posY + y,
            mc.player.posZ,
            false
        )
        )
    }

    fun sendPackets(y: Double) {
        mc.player.connection.sendPacket(CPacketPlayer.Position(mc.player.posX,
            mc.player.posY + y,
            mc.player.posZ,
            true
        )
        )
    }

    fun slot(): Int {
        when (block.GetCombo()) {
            "Obsidian" -> return Main.inventoryManager.getBlockFromHotbar(Blocks.OBSIDIAN)
            "EnderChests" -> return Main.inventoryManager.getBlockFromHotbar(Blocks.ENDER_CHEST)
            "Fallback" -> {
                val slot3 = Main.inventoryManager.getBlockFromHotbar(Blocks.ENDER_CHEST)
                return if (slot3 != -1) {
                    slot3
                } else {
                    Main.inventoryManager.getBlockFromHotbar(Blocks.OBSIDIAN)
                }
            }
            "ReverseFallback" -> {
                val slot2 = Main.inventoryManager.getBlockFromHotbar(Blocks.OBSIDIAN)
                return if (slot2 != -1) {
                    slot2
                } else {
                    Main.inventoryManager.getBlockFromHotbar(Blocks.ENDER_CHEST)
                }
            }
            "WitherSkulls" -> return Main.inventoryManager.getBlockFromHotbar(Blocks.SKULL)
            "Anvil" -> return Main.inventoryManager.getBlockFromHotbar(Blocks.ANVIL)
            "Webs" -> return Main.inventoryManager.getBlockFromHotbar(Blocks.WEB)
        }
        return -1
    }
}