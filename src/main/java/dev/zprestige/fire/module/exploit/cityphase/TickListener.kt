package dev.zprestige.fire.module.exploit.cityphase

import dev.zprestige.fire.event.bus.EventListener
import dev.zprestige.fire.event.impl.TickEvent
import net.minecraft.network.play.client.CPacketPlayer
import net.minecraft.util.math.MathHelper
import kotlin.math.floor

class TickListener(cityPhase: CityPhase) : EventListener<TickEvent, CityPhase>(TickEvent::class.java, cityPhase) {

    override fun invoke(e: Any) {
        if (module.movingByKeys()) {
            module.disableModule()
            return
        }
        if (mc.world.getCollisionBoxes(mc.player, mc.player.entityBoundingBox.grow(0.01, 0.0, 0.01)).size < 2) {
            mc.player.setPosition(module.roundToClosest(mc.player.posX,
                floor(mc.player.posX) + 0.301,
                floor(mc.player.posX) + 0.699
            ),
                mc.player.posY,
                module.roundToClosest(mc.player.posZ,
                    floor(mc.player.posZ) + 0.301,
                    floor(mc.player.posZ) + 0.699
                )
            )
        } else if (mc.player.ticksExisted % module.timeout.GetSlider() == 0f) {
            mc.player.setPosition(mc.player.posX + MathHelper.clamp(module.roundToClosest(mc.player.posX,
                floor(mc.player.posX) + 0.241,
                floor(mc.player.posX) + 0.759
            ) - mc.player.posX, -0.03, 0.03
            ), mc.player.posY, mc.player.posZ + MathHelper.clamp(
                module.roundToClosest(mc.player.posZ,
                    floor(mc.player.posZ) + 0.241,
                    floor(mc.player.posZ) + 0.759
                ) - mc.player.posZ, -0.03, 0.03
            )
            )
            mc.player.connection.sendPacket(CPacketPlayer.Position(mc.player.posX,
                mc.player.posY,
                mc.player.posZ,
                true
            )
            )
            mc.player.connection.sendPacket(CPacketPlayer.Position(module.roundToClosest(mc.player.posX,
                floor(mc.player.posX) + 0.23,
                floor(mc.player.posX) + 0.77
            ),
                mc.player.posY,
                module.roundToClosest(mc.player.posZ,
                    floor(mc.player.posZ) + 0.23,
                    floor(mc.player.posZ) + 0.77
                ),
                true
            )
            )
        }
    }
}
