package dev.zprestige.fire.module.exploit.phase;

import dev.zprestige.fire.newbus.EventListener;
import dev.zprestige.fire.newbus.events.TickEvent;
import dev.zprestige.fire.util.impl.EntityUtil;

import java.util.concurrent.TimeUnit;

public class TickListener extends EventListener<TickEvent, Phase> {

    public TickListener(final Phase phase){
        super(TickEvent.class, phase);
    }

    @Override
    public void invoke(final Object object){
        if (mc.player == null || mc.world == null) {
            module.disableModule();
            return;
        }
        module.rubberbandMap.entrySet().removeIf(entry -> System.currentTimeMillis() - entry.getValue().getTime() > TimeUnit.SECONDS.toMillis(30L));
        double motionY;
        mc.player.motionZ = 0.0;
        mc.player.motionY = 0.0;
        mc.player.motionX = 0.0;
        if (module.teleportId == 0) {
            if (module.checkPackets(4)) {
                module.sendPackets(0.0, 0.0, 0.0, false);
            }
            return;
        }
        final boolean phase = !mc.world.getCollisionBoxes(mc.player, mc.player.getEntityBoundingBox()).isEmpty();
        if (mc.player.movementInput.jump && (phase || !EntityUtil.isMoving())) {
            motionY = module.antiKick.GetSwitch() && !phase && module.checkPackets(20) ? -0.032 : 0.062;
        } else {
            motionY = mc.player.movementInput.sneak ? -0.062 : !phase ? (module.checkPackets(4) ? (module.antiKick.GetSwitch() ? -0.04 : 0.0) : 0.0) : 0.0;
        }
        if (phase && EntityUtil.isMoving() && motionY != 0.0) {
            motionY /= 2.5f;
        }
        final float[] dirSpeed = EntityUtil.getSpeed(phase ? 0.031 : 0.26);
        int factorInt = (int) Math.floor(module.factor.GetSlider());
        if (Math.random() <= module.factor.GetSlider() - factorInt) {
            factorInt++;
        }
        for (int i = 1; i <= factorInt; ++i) {
            module.sendPackets(mc.player.motionX = dirSpeed[0] * i, mc.player.motionY = motionY * i, mc.player.motionZ = dirSpeed[1] * i, true);
        }
    }
}
