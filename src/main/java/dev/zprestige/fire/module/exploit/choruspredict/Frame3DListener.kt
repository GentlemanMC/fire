package dev.zprestige.fire.module.exploit.choruspredict

import dev.zprestige.fire.event.bus.EventListener
import dev.zprestige.fire.event.impl.FrameEvent.FrameEvent3D
import dev.zprestige.fire.util.impl.RenderUtil
import net.minecraft.util.math.AxisAlignedBB
import net.minecraft.util.math.Vec3d

class Frame3DListener(chorusPredict: ChorusPredict) : EventListener<FrameEvent3D, ChorusPredict>(
    FrameEvent3D::class.java, chorusPredict
) {
    override fun invoke(e: Any) {
        for (entry in HashMap(module.chorusMap)) {
            if (System.currentTimeMillis() - entry.value > module.stayTime.GetSlider() * 1000) {
                module.chorusMap.remove(entry.key)
                continue
            }
            val min = entry.key
            val bb = mc.player.entityBoundingBox
            val size = Vec3d(bb.maxX - bb.minX, bb.maxY - bb.minY, bb.maxZ - bb.minZ)
            val bb1 = AxisAlignedBB(min.x, min.y, min.z, min.x + size.x, min.y + size.y, min.z + size.z)
            if (module.box.GetSwitch()) {
                RenderUtil.drawBBBoxWithHeight(bb1, module.boxColor.GetColor(), 1f)
            }
            if (module.outline.GetSwitch()) {
                RenderUtil.drawBlockOutlineBBWithHeight(bb1,
                    module.outlineColor.GetColor(),
                    module.outlineWidth.GetSlider(),
                    1f
                )
            }
        }
    }
}