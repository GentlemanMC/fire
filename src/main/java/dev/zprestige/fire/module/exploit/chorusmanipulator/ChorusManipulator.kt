package dev.zprestige.fire.module.exploit.chorusmanipulator

import dev.zprestige.fire.Main
import dev.zprestige.fire.event.bus.EventListener
import dev.zprestige.fire.module.Descriptor
import dev.zprestige.fire.module.Module
import dev.zprestige.fire.settings.impl.ColorBox
import dev.zprestige.fire.settings.impl.Key
import dev.zprestige.fire.settings.impl.Slider
import dev.zprestige.fire.settings.impl.Switch
import dev.zprestige.fire.util.impl.Timer
import net.minecraft.network.play.client.CPacketConfirmTeleport
import net.minecraft.network.play.client.CPacketPlayer
import net.minecraft.util.math.BlockPos
import org.lwjgl.input.Keyboard
import java.awt.Color
import java.util.*

@Descriptor(description = "Controls when you want to teleport to your chorus fruit position")
class ChorusManipulator : Module() {
    val rotateOnChorus: Switch = Menu.Switch("Rotate On Chorus", false)
    val activateKey: Key = Menu.Key("Activate Key", Keyboard.KEY_NONE)
    val boxColor: ColorBox = Menu.Color("Box Color", Color.WHITE)
    val outlineColor: ColorBox = Menu.Color("Outline Color", Color.WHITE)
    val lineWidth: Slider = Menu.Slider("Line Width", 1.0f, 0.1f, 5.0f)
    val timer = Timer()
    val packets: Queue<CPacketPlayer> = LinkedList()
    val tpPackets: Queue<CPacketConfirmTeleport> = LinkedList()
    var chorussed = false
    var pos: BlockPos? = null

    init {
        eventListeners = arrayOf<EventListener<*, *>>(
            ConnectionDisconnectListener(this),
            Frame3DListener(this),
            PacketReceiveListener(this),
            PacketSendListener(this),
            TickListener(this)
        )
    }

    fun activate() {
        Main.eventBus.unregisterListeners(eventListeners)
        onDisable()
        Main.eventBus.registerListeners(eventListeners)
        onEnable()
    }

    override fun onDisable() {
        while (!packets.isEmpty()) {
            if (mc.player.connection != null) {
                mc.player.connection.sendPacket(packets.poll())
            }
        }
        while (!tpPackets.isEmpty()) {
            if (mc.player.connection != null) {
                mc.player.connection.sendPacket(tpPackets.poll())
            }
        }
        pos = null
        chorussed = false
    }
}